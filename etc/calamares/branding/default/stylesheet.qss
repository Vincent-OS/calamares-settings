/*
 * SPDX-FileCopyrightText: no
 * SPDX-License-Identifier: CC0-1.0
 */

/*
A branding component can ship a stylesheet (like this one)
which is applied to parts of the Calamares user-interface.
In principle, all parts can be styled through CSS.
Missing parts should be filed as issues.

The IDs are based on the object names in the C++ code.
You can use the Debug Dialog to find out object names:
  - Open the debug dialog
  - Choose tab *Tools*
  - Click *Widget Tree* button
The list of object names is printed in the log.

Documentation for styling Qt Widgets through a stylesheet
can be found at
    https://doc.qt.io/qt-5/stylesheet-examples.html
    https://doc.qt.io/qt-5/stylesheet-reference.html
In Calamares, styling widget classes is supported (e.g.
using `QComboBox` as a selector).

This example stylesheet has all the actual styling commented out.
The examples are not exhaustive.

*/

#mainApp {
  background-color: black;
  color: white;
}

#sudebarApp {
  background-color: black;
  color: white;
}

#logoApp {
  background: none;
}

QWidget {
  background-color: black;
  color: white;
}

QLabel {
  color: white;
}

QLineEdit {
  background-color: black;
  color: white;
}

QListView {
  background-color: black;
  color: white;
}

QPushButton {
  background-color: #55ab41;
  color: white;
}

QToolTip {
  background-color: black;
  color: white;
}

QTreeView {
  background-color: black;
  color: white;
}

#layoutSelector {
  background-color: black;
  color: white;
}

#variantSelector {
  background-color: black;
  color: white;
}

#scrollAreaWidgetContents {
  color: white;
}

#defineInfoLabel {
  color: white
}
